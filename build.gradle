plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.node-gradle.node" version '4.0.0'
}

group = 'com.bit'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1' 
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
	implementation group: 'io.awspring.cloud', name: 'spring-cloud-starter-aws', version: '2.4.4'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.488'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.7.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.named('test') {
	useJUnitPlatform()
}

def reactAppDir = "$projectDir/front"


processResources {
  dependsOn "copyReactFile"
  //dependsOn "appNpmInstall"
}


task copyReactFile(type: Copy) {
    dependsOn "buildReact"
    from "$reactAppDir/build"
    //into "$buildDir/resources/main/static"
	  into "$projectDir/src/main/resources/static/"
}

task buildReact(type: Exec) {
  dependsOn "installReact"
  workingDir "$reactAppDir"
  inputs.dir "$reactAppDir"
  group = BasePlugin.BUILD_GROUP
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {	
    commandLine "npm.cmd", "run-script", "build"
  } else {	
    commandLine "npm", "run-script", "build"
  }
}

task installReact(type: Exec) {
  workingDir "$reactAppDir"
  inputs.dir "$reactAppDir"
  group = BasePlugin.BUILD_GROUP
  if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    commandLine "npm.cmd", "audit", "fix"
    commandLine "npm.cmd", "install"
  } else {
    commandLine "npm", "audit", "fix"
    commandLine "npm", "install"
  }
}